INFO: Starting training:
        Epochs:          5
        Batch size:      1
        Learning rate:   1e-05
        Training size:   4580
        Validation size: 508
        Checkpoints:     True
        Device:          cuda
        Images scaling:  0.5
        Mixed Precision: False
Epoch 1/5:   0%|                                                                                                                                       | 1/4580 [00:10<13:51:34, 10.90s/img, loss (batch)=1.52]
Traceback (most recent call last):
  File "c:/Users/yunjc/..python_jupyter/Pytorch-UNet-master/train.py", line 184, in <module>
    train_net(net=net,
  File "c:/Users/yunjc/..python_jupyter/Pytorch-UNet-master/train.py", line 92, in train_net
    masks_pred = net(images)
  File "C:\Users\yunjc\anaconda3\envs\dl_env\lib\site-packages\torch\nn\modules\module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "c:\Users\yunjc\..python_jupyter\Pytorch-UNet-master\unet\unet_model.py", line 34, in forward
    x = self.up4(x, x1)
  File "C:\Users\yunjc\anaconda3\envs\dl_env\lib\site-packages\torch\nn\modules\module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "c:\Users\yunjc\..python_jupyter\Pytorch-UNet-master\unet\unet_parts.py", line 68, in forward
    return self.conv(x)
  File "C:\Users\yunjc\anaconda3\envs\dl_env\lib\site-packages\torch\nn\modules\module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "c:\Users\yunjc\..python_jupyter\Pytorch-UNet-master\unet\unet_parts.py", line 25, in forward
    return self.double_conv(x)
  File "C:\Users\yunjc\anaconda3\envs\dl_env\lib\site-packages\torch\nn\modules\module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\yunjc\anaconda3\envs\dl_env\lib\site-packages\torch\nn\modules\container.py", line 141, in forward
    input = module(input)
  File "C:\Users\yunjc\anaconda3\envs\dl_env\lib\site-packages\torch\nn\modules\module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\yunjc\anaconda3\envs\dl_env\lib\site-packages\torch\nn\modules\conv.py", line 446, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\yunjc\anaconda3\envs\dl_env\lib\site-packages\torch\nn\modules\conv.py", line 442, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: CUDA out of memory. Tried to allocate 150.00 MiB (GPU 0; 6.00 GiB total capacity; 2.98 GiB already allocated; 0 bytes free; 3.42 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF