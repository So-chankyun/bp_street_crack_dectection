INFO: Starting training:
        Epochs:          5
        Batch size:      1
        Learning rate:   1e-05
        Training size:   9000
        Validation size: 1000
        Checkpoints:     True
        Device:          cpu
        Images scaling:  0.4
        Mixed Precision: True
C:\Users\yunjc\anaconda3\lib\site-packages\torch\cuda\amp\grad_scaler.py:115: UserWarning: torch.cuda.amp.GradScaler is enabled, but CUDA is not available.  Disabling.
  warnings.warn("torch.cuda.amp.GradScaler is enabled, but CUDA is not available.  Disabling.")
Epoch 1/5:   0%|                                                                                                                                                                                       | 0/9000 [00:00<?, ?img/s]C:\Users\yunjc\anaconda3\lib\site-packages\torch\autocast_mode.py:141: UserWarning: User provided device_type of 'cuda', but CUDA is not available. Disabling
  warnings.warn('User provided device_type of \'cuda\', but CUDA is not available. Disabling')
Epoch 1/5:   0%|                                                                                                                                                                                       | 0/9000 [00:07<?, ?img/s]
Traceback (most recent call last):
  File "C:\Users\yunjc\_python_jupyter\bupyeonggu\bp_road_crack_detection\_model_test\Pytorch-UNet-master\train.py", line 190, in <module>
    train_net(net=net,
  File "C:\Users\yunjc\_python_jupyter\bupyeonggu\bp_road_crack_detection\_model_test\Pytorch-UNet-master\train.py", line 99, in train_net
    loss = criterion(masks_pred, true_masks) \
  File "C:\Users\yunjc\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\yunjc\anaconda3\lib\site-packages\torch\nn\modules\loss.py", line 1150, in forward
    return F.cross_entropy(input, target, weight=self.weight,
  File "C:\Users\yunjc\anaconda3\lib\site-packages\torch\nn\functional.py", line 2846, in cross_entropy
    return torch._C._nn.cross_entropy_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index, label_smoothing)
IndexError: Target 255 is out of bounds.